//1
package assigmnet;
class Shape
{
	private int width;
	private int height;
	
	public void setWidth(int width)
	{
		this.width=width;
	}
	public int getWidth()
	{
		return width;
	}
	
	public void setHeight(int height)
	{
		this.height=height;
	}
	public int getHeight()
	{
		return height;
	}
}
public class q1 
{

	public static void main(String[] args) 
	{
		Shape s = new Shape();
		s.setWidth(26);
		s.setHeight(8);
		System.out.println("Width is "+s.getWidth());
		System.out.println("Height is "+s.getHeight());

	}

}

//1 with user input
package assigmnet;
import java.util.Scanner;
class Shape
{
	private int width;
	private int height;
	
	public void setWidth(int width)
	{
		this.width=width;
	}
	public int getWidth()
	{
		return width;
	}
	
	public void setHeight(int height)
	{
		this.height=height;
	}
	public int getHeight()
	{
		return height;
	}
}
public class q1 
{

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		Shape s = new Shape();
		System.out.println("enter width");
		int width=sc.nextInt();
		System.out.println("enter height");
		int height=sc.nextInt();
		System.out.println("width is "+width);
		System.out.println("width is "+height);
		
		

	}

}

//2
package assigmnet;
class Myclass
{
	private int k,j;
	Myclass()
	{
		System.out.println("Defualt constructor");
	}
	Myclass(int k)
	{
		this.k=k;
		System.out.println("In one parametrised constructor k is "+k);
	}
	Myclass(int k, int j)
	{
		this.k=k;
		this.j=j;
		System.out.println("In two parametrised constructor k is "+k+ " and j is "+ j);
	}
}
public class q2
{

	public static void main(String[] args) 
	{
		Myclass m1 = new Myclass();
		Myclass m2 = new Myclass(26);
		Myclass m3 = new Myclass(26,8);
	}

}

//3
package assigmnet;
class Emp
{
	private static int cnt=26;
	
	public static int getCnt()
	{
		return cnt;
	}
}
public class q3
{
	public static void main(String[] args) 
	{
		System.out.println("Cnt is "+Emp.getCnt());
	}

}

//4
package assigmnet;
class DemoOb
{
	
}
public class q4
{
	public static void main(String[] args) 
	{
		DemoOb d = new DemoOb();//first obj
		DemoOb ref = d;// ref will have adderess of that obj which is in d
		ref = new DemoOb();// now ref will no lonegr refer to where d's is refering
		// now it will have address of new obj;
	}

}

//5
package assigmnet;
class A
{
	private int num1;
	private static int num2=23;
	
	public void setNum1(int num1)
	{
		this.num1=num1;
	}
	public int getNum1()
	{
		return num1;
	}
	
	public static int getNum2()
	{
		return num2;
	}
}
class B
{
	private int num3;
	private static int num4=2;
	
	public void setNum3(int num3)
	{
		this.num3=num3;
	}
	public int getNum3()
	{
		return num3;
	}
	
	public static int getNum4()
	{
		return num4;
	}
}
class C
{
	private int num5;
	private static int num6=97;
	
	public void setNum5(int num5)
	{
		this.num5=num5;
	}
	public int getNum5()
	{
		return num5;
	}
	
	public static int getNum6()
	{
		return num6;
	}
}
public class q5
{
	public static void main(String[] args) 
	{
		A a = new A();
		a.setNum1(8);
		B b = new B();
		b.setNum3(12);
		C c = new C();
		c.setNum5(95);
		System.out.println("num1 is "+ a.getNum1());
		System.out.println("num2 is "+ A.getNum2());
		System.out.println("num3 is "+ b.getNum3());
		System.out.println("num4 is "+ B.getNum4());
		System.out.println("num5 is "+ c.getNum5());
		System.out.println("num6 is "+ C.getNum6());
	}

}

//6
package assigmnet;
class A
{
	private int num1;
	private static int num2=23;
	static
	{
		System.out.println("A's static initializer");
	}
	public void setNum1(int num1)
	{
		this.num1=num1;
	}
	public int getNum1()
	{
		return num1;
	}
	
	public static int getNum2()
	{
		return num2;
	}
}
class B
{
	private int num3;
	private static int num4=2;
	static
	{
		System.out.println("B's static initializer");
	}
	public void setNum3(int num3)
	{
		this.num3=num3;
	}
	public int getNum3()
	{
		return num3;
	}
	
	public static int getNum4()
	{
		return num4;
	}
}
class C
{
	private int num5;
	private static int num6=97;
	static
	{
		System.out.println("C's static initializer");
	}
	public void setNum5(int num5)
	{
		this.num5=num5;
	}
	public int getNum5()
	{
		return num5;
	}
	
	public static int getNum6()
	{
		return num6;
	}
}
public class q6
{
	public static void main(String[] args) 
	{
		/*static
		{
			System.out.println("Main's static initializer");
		}
		in main static block is not allowed, static should be outside main()
		*/
		A a = new A();
		a.setNum1(8);
		B b = new B();
		b.setNum3(12);
		C c = new C();
		c.setNum5(95);
		System.out.println("num1 is "+ a.getNum1());
		System.out.println("num2 is "+ A.getNum2());
		System.out.println("num3 is "+ b.getNum3());
		System.out.println("num4 is "+ B.getNum4());
		System.out.println("num5 is "+ c.getNum5());
		System.out.println("num6 is "+ C.getNum6());
	}

}


