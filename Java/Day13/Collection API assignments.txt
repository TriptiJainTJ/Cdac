1) accept 10 numbers from user and add them inside the ArrayList.
using ListIterator display all the numbers bidirectionally.

2) on the developer side:
	create a generic class which can accept any type
		with setters , getters and toString methods.
	create necessary jar files and  documentation.

on client side 
	create the object of above generic class and invoke its setters , getters and display the object.
  

3) create LinkedList with the values 10,20,30 and 40.
display it.
now insert 500 in the beginning.
	insert 400 at 2nd position.
	add 1000 at the end.
display the list again.

4) add 5 numbers inside CopyOnWriteArrayList and show how can you add one more number at the same time of traversal through its iterator.


5) create a class "MyClass".
create 5 different objects of it.
add them in a ArrayList.
store ArrayList in file.
Now open a file, read ArrayList and display all objects.

6) create a HashMap.
store  prn no. and students name of 10 students inside the HashMap.
display it using iterator.

7) create a hierarchy as follows
	interface Game- play() method
	Derive at least 3 classes from it. ( Cricket, Chess and Football )
Now Create generic class which can take Game type (i.e. any sub type of Game) as parameter.
In this class try to call the play() method of the class which is passed to it.

8) Define a class "Employee" with following members
empid, empname, desig, basic.
Define a parameterised constructor which will take all these values while creating an instance.
Also define "disp()" method which will display all these details.
create 4 employees and save them in "ArrayList".
Now save this "ArrayList" in a file.
Open file , read "ArrayList" , traverse ArrayList and call "disp()" for all the objects.

9) maintain ICC ranking of at least 5 batsmen in the "HashMap".
list should be maintain as "rank" "name"
e.g. "1" "Rohit Sharma".
Now ask any rank bet'n 1 to 5 from user. ( user input).
if user asks for a particular rank , retrieve batsman name for that rank from the HashMap.

Answers:
//q1
package q1;
import java.util.*;
import java.io.*;
public class q1
{

	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		List<Integer>myList = new ArrayList<>();
		System.out.println("enter 10 numbers");
		for(int i=1;i<=10;i++)
		{
			int num = sc.nextInt();
			myList.add(num);
		}
		
		ListIterator<Integer>listIterator = myList.listIterator();
		while(listIterator.hasNext())
		{
			System.out.println(listIterator.next());
		}
		
		while(listIterator.hasPrevious())
		{
			System.out.println(listIterator.previous());
		}
	}

}


//q2
package devpro;

public class genericClass <T>
{
	private T value;
	
	public void setValue(T value)
	{
		this.value = value;
	}
	public T getValue()
	{
		return value;
	}
	public String toString()
	{
		return "value [value "+value+"]";
	}
}

package clientPro;

import devpro.genericClass;

public class genericClassDemo 
{

	public static void main(String[] args) 
	{
		genericClass<Integer> g = new genericClass<Integer>();
		g.setValue(26);
		System.out.println(g.getValue());
		
		genericClass<String> g2 = new genericClass<String>();
		g2.setValue("Tripti");
		System.out.println(g2.getValue());

	}

}

//q3
package q3;
import java.util.*;

public class q3 
{

	public static void main(String[] args) 
	{
		List<Integer> myList = new LinkedList<>();
		myList.add(10);
		myList.add(20);
		myList.add(30);
		myList.add(40);
		System.out.println("List is "+myList);
		((LinkedList)myList).addFirst(500);
		myList.add(2,400);
		((LinkedList)myList).addLast(1000);
		System.out.println("After modification list is "+myList);

	}

}

//q4
package q4;

import java.util.*;
import java.util.concurrent.*;

public class q4 
{

	public static void main(String[] args) 
	{
		List<Integer> myList = new CopyOnWriteArrayList<>();
		myList.add(1);
		myList.add(2);
		myList.add(3);
		myList.add(4);
		myList.add(5);
		Iterator itr = myList.iterator();
		System.out.println("List is "+myList);
		while(itr.hasNext())
		{
			itr.next();
			myList.add(26);
			System.out.println("After adding list is "+myList);
		}

	}

}

//q5
package q5;

import java.io.*;
import java.util.*;

public class MyClass implements Serializable
{

	private static final long serialVersionUID = 1L;

	public static void main(String[] args) 
	{
		MyClass m1 = new MyClass();
		MyClass m2 = new MyClass();
		MyClass m3 = new MyClass();
		MyClass m4 = new MyClass();
		MyClass m5 = new MyClass();
		
		List<MyClass> myList = new ArrayList<>();
		myList.add(m1);
		myList.add(m2);
		myList.add(m3);
		myList.add(m4);
		myList.add(m5);
		
		try(FileOutputStream fos = new FileOutputStream("/Users/triptijain/Downloads/Vita/DAC Mine/Java/Day13/q5.txt"))
		{
			try(ObjectOutputStream oos = new ObjectOutputStream(fos))
			{
				oos.writeObject(myList);
			}
			System.out.println("arraylist is stored");
		}
		catch(Exception e1)
		{
			e1.printStackTrace();
		}
		
		List <?>ref = null;
		try(FileInputStream fis = new FileInputStream("/Users/triptijain/Downloads/Vita/DAC Mine/Java/Day13/q5.txt"))
		{
				try(ObjectInputStream ois = new ObjectInputStream(fis))
				{
					ref=(List<?>)ois.readObject();
					System.out.println("reading arraylist");
					Iterator <?>itr = ref.iterator();
					while(itr.hasNext())
					{
						System.out.println(itr.next());
					}
				}
		}
		catch(Exception e1)
		{
			e1.printStackTrace();
		}

	}

}

//q6
package q6;

import java.util.Map.Entry;
import java.util.*;

public class q6 
{

	public static void main(String[] args) 
	{
		Map<Integer, String> myMap = new HashMap<>();
		myMap.put(1,"Tripti"); 
		myMap.put(2,"Akshay"); 
		myMap.put(3,"Kanika"); 
		myMap.put(4,"Trisha"); 
		myMap.put(5,"Seema"); 
		myMap.put(6,"Sunil"); 
		myMap.put(7,"Heena"); 
		myMap.put(8,"Shiro"); 
		myMap.put(9,"Pooja"); 
		myMap.put(10,"Alka"); 
		
		Set<Entry<Integer, String>> set=myMap.entrySet();
		Iterator<Entry<Integer, String>> i=set.iterator();
		
		while(i.hasNext())
		{
			Map.Entry<Integer, String> me=(Entry<Integer, String>)i.next();
			System.out.println("key is "+me.getKey()+" value is "+me.getValue());
		}

	}

}

//q7
package hierarchy;

public interface Game 
{
	public void play();
}
package hierarchy;

public class Cricket implements Game
{
	public void play()
	{
		System.out.println("Cricket was played");
	}
}
package hierarchy;

public class Chess implements Game
{
	public void play()
	{
		System.out.println("Chess was played");
	}
}
package hierarchy;

public class Football implements Game
{
	public void play()
	{
		System.out.println("Football was played");
	}
}
package hierarchy;

class GenericClass <T extends Game>
{
	public T Game;
	public GenericClass(T Game)
	{
		this.Game=Game;
	}
	public void gameplay()
	{
		Game.play();
	}
}

public class GenericClassDemo
{

	public static void main(String[] args) 
	{
		Cricket c = new Cricket();
		Chess chess = new Chess();
		Football f = new Football();
		
		GenericClass<Cricket> g1 = new GenericClass<>(c);
		g1.gameplay();
		GenericClass<Chess> g2 = new GenericClass<>(chess);
		g2.gameplay();
		GenericClass<Football> g3 = new GenericClass<>(f);
		g3.gameplay();

	}

}
//q8
import java.io.*;
import java.util.*;

class Employee implements Serializable
{
	private int empid;
	private String empname, designation;
	private double basic;
	
	Employee(int empid, String empname, String designation, double basic)
	{
		this.empid = empid;
		this.empname = empname;
		this.designation = designation;
		this.basic = basic;
	}
	public void disp()
	{
		System.out.println("Eployee id is "+empid);
		System.out.println("Employee name is "+empname);
		System.out.println("Employee designation is "+designation);
		System.out.println("employee basic is "+basic);
	}
}


public class EmployeeDemo
{

	public static void main(String[] args)
	{
		Employee e = new Employee(1,"Tripti","Senior Manager",35.08);
		Employee e2 = new Employee(2,"Akshay","Manager",32.08);
		Employee e3 = new Employee(3,"Kanika","A.Manager",37.08);
		Employee e4 = new Employee(4,"Shiro","Manager",39.08);
		
		List<Employee> myList = new ArrayList<>();
		myList.add(e);
		myList.add(e2);
		myList.add(e3);
		myList.add(e4);
		

		try(FileOutputStream fos = new FileOutputStream("/Users/triptijain/Downloads/Vita/DAC Mine/Java/Day13/arraylist.txt"))
				{
					try(ObjectOutputStream oos = new ObjectOutputStream(fos))
					{
						oos.writeObject(myList);
						
					}
				}
		catch(Exception e1)
		{
			e1.printStackTrace();
		}
		List<?>ref=null;
		try(FileInputStream fis = new FileInputStream("/Users/triptijain/Downloads/Vita/DAC Mine/Java/Day13/arraylist.txt"))
		{
				try(ObjectInputStream ois = new ObjectInputStream(fis))
				{
					ref = (List<?>)ois.readObject();
					Iterator <?>itr = ref.iterator();
					while(itr.hasNext())
					{
						Object ob = itr.next();
						if(ob instanceof Employee)
						{
							Employee employee = (Employee)ob;
							employee.disp();
						}
					}
					
				}
		}
		catch(Exception e1)
		{
			e1.printStackTrace();
		}
	}

}
//q9
package q9;

import java.util.*;

public class q9 
{

	public static void main(String[] args) 
	{
		Map<Integer, String> myList = new HashMap<>();
		myList.put(1,"Tripti");
		myList.put(2,"Akshay");
		myList.put(3,"Kanika");
		myList.put(4,"Shiro");
		myList.put(5,"Trisha");
		
		Scanner sc = new Scanner(System.in);
		System.out.println("enter rank b/w 1 to 5 only");
		int rank = sc.nextInt();
		String batsman = myList.get(rank);
		if(rank>=1 && rank<=5)
		{
			System.out.println(batsman);
		}

	}

}